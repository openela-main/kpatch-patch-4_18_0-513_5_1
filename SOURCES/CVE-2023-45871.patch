From d27c92d0a8ff7331285f5d53cb86446869bfd33a Mon Sep 17 00:00:00 2001
From: Joe Lawrence <joe.lawrence@redhat.com>
Date: Wed, 22 Nov 2023 15:46:34 -0500
Subject: [KPATCH CVE-2023-45871] kpatch fixes for CVE-2023-45871

Kernels:
4.18.0-513.5.1.el8_9


Kpatch-MR: https://gitlab.com/redhat/prdsc/rhel/src/kpatch/rhel-8/-/merge_requests/181
Approved-by: Ryan Sullivan (@rysulliv)
Changes since last build:
[x86_64]:
igb_main.o: changed function: igb_configure
sch_atm.o: changed function: atm_tc_peek
sch_atm.o: changed function: sch_atm_dequeue
sch_drr.o: changed function: drr_dequeue
sch_dsmark.o: changed function: dsmark_peek
sch_ets.o: changed function: ets_qdisc_dequeue
sch_hfsc.o: changed function: hfsc_change_class
sch_hfsc.o: changed function: hfsc_enqueue
sch_hfsc.o: changed function: qdisc_peek_len
sch_multiq.o: changed function: multiq_peek
sch_prio.o: changed function: prio_peek
sch_qfq.o: changed function: qfq_dequeue
sch_qfq.o: changed function: qfq_enqueue
sch_red.o: changed function: red_peek
sch_sfb.o: changed function: sfb_peek
sch_tbf.o: changed function: tbf_dequeue
tls_sw.o: changed function: tls_sw_do_sendpage

[ppc64le]:
sch_atm.o: changed function: atm_tc_bind_filter
sch_atm.o: changed function: atm_tc_delete
sch_atm.o: changed function: atm_tc_destroy
sch_atm.o: changed function: atm_tc_find
sch_atm.o: changed function: atm_tc_graft
sch_atm.o: changed function: atm_tc_leaf
sch_atm.o: changed function: atm_tc_peek
sch_atm.o: changed function: atm_tc_put
sch_atm.o: changed function: atm_tc_reset
sch_atm.o: changed function: atm_tc_tcf_block
sch_atm.o: changed function: sch_atm_dequeue
sch_drr.o: changed function: drr_dequeue
sch_dsmark.o: changed function: dsmark_bind_filter
sch_dsmark.o: changed function: dsmark_change
sch_dsmark.o: changed function: dsmark_destroy
sch_dsmark.o: changed function: dsmark_peek
sch_dsmark.o: changed function: dsmark_reset
sch_ets.o: changed function: ets_qdisc_dequeue
sch_hfsc.o: changed function: hfsc_change_class
sch_hfsc.o: changed function: hfsc_dequeue
sch_hfsc.o: changed function: hfsc_enqueue
sch_hfsc.o: new function: qdisc_peek_len
sch_multiq.o: changed function: multiq_peek
sch_prio.o: changed function: prio_peek
sch_qfq.o: changed function: qfq_dequeue
sch_qfq.o: changed function: qfq_enqueue
sch_red.o: changed function: red_peek
sch_sfb.o: changed function: sfb_peek
sch_tbf.o: changed function: tbf_dequeue
tls_sw.o: changed function: tls_sw_do_sendpage

---------------------------

Modifications: none

commit 00d31bb7b45ebf291ed891836416723114a74226
Author: Wander Lairson Costa <wander@redhat.com>
Date:   Wed Nov 1 10:24:59 2023 -0300

    igb: set max size RX buffer when store bad packet is enabled

    JIRA: https://issues.redhat.com/browse/RHEL-15187
    CVE: CVE-2023-45871
    Y-Commit: 5dd44ecfc6a433a4b8f12002f96477efd5731076

    O-JIRA: https://issues.redhat.com/browse/RHEL-15188
    O-CVE: CVE-2023-45871

    commit bb5ed01cd2428cd25b1c88a3a9cba87055eb289f
    Author: Radoslaw Tyl <radoslawx.tyl@intel.com>
    Date:   Thu Aug 24 13:46:19 2023 -0700

        igb: set max size RX buffer when store bad packet is enabled

        Increase the RX buffer size to 3K when the SBP bit is on. The size of
        the RX buffer determines the number of pages allocated which may not
        be sufficient for receive frames larger than the set MTU size.

        Cc: stable@vger.kernel.org
        Fixes: 89eaefb61dc9 ("igb: Support RX-ALL feature flag.")
        Reported-by: Manfred Rudigier <manfred.rudigier@omicronenergy.com>
        Signed-off-by: Radoslaw Tyl <radoslawx.tyl@intel.com>
        Tested-by: Arpana Arland <arpanax.arland@intel.com> (A Contingent worker at Intel)
        Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
        Signed-off-by: David S. Miller <davem@davemloft.net>

    Signed-off-by: Wander Lairson Costa <wander@redhat.com>
    Signed-off-by: Patrick Talbert <ptalbert@redhat.com>

Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
---
 drivers/net/ethernet/intel/igb/igb_main.c | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/intel/igb/igb_main.c b/drivers/net/ethernet/intel/igb/igb_main.c
index 1e1e458f872f..851bd126461b 100644
--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@ -4774,6 +4774,10 @@ void igb_configure_rx_ring(struct igb_adapter *adapter,
 static void igb_set_rx_buffer_len(struct igb_adapter *adapter,
 				  struct igb_ring *rx_ring)
 {
+#if (PAGE_SIZE < 8192)
+	struct e1000_hw *hw = &adapter->hw;
+#endif
+
 	/* set build_skb and buffer size flags */
 	clear_ring_build_skb_enabled(rx_ring);
 	clear_ring_uses_large_buffer(rx_ring);
@@ -4784,10 +4788,9 @@ static void igb_set_rx_buffer_len(struct igb_adapter *adapter,
 	set_ring_build_skb_enabled(rx_ring);
 
 #if (PAGE_SIZE < 8192)
-	if (adapter->max_frame_size <= IGB_MAX_FRAME_BUILD_SKB)
-		return;
-
-	set_ring_uses_large_buffer(rx_ring);
+	if (adapter->max_frame_size > IGB_MAX_FRAME_BUILD_SKB ||
+	    rd32(E1000_RCTL) & E1000_RCTL_SBP)
+		set_ring_uses_large_buffer(rx_ring);
 #endif
 }
 
-- 
2.43.0


